{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop(9-4-2024)\\\\React Tutorials\\\\ReduxBasics\\\\Project\\\\src\\\\components\\\\Counter.js\";\nimport { Component } from 'react';\nimport classes from './Counter.module.css';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { counterActions } from '../store/index';\n\n// FUNCTIONAL COMPONENT\n\n// const Counter = () => {\n//   const dispatch = useDispatch();\n//   // whren using useSelector react-redux automatically creates a subscription of this component \n//   // function to the store\n//   const counter = useSelector(state => state.counter);\n//   const toggleCounterHandler = () => {\n//      dispatch({type: 'toogleCounter'})\n//  };\n\n//   const incrementHandler = () => {\n//     dispatch({type: 'increment'});\n//   }\n\n//   const decrementHandler = () => {\n//     dispatch({type: 'decrement'})\n//   }\n\n// const increaseHandler = () => {\n//   dispatch({type: 'increase', amount: 5})\n// }\n\n//   return (\n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}>{counter}</div>\n//       <div>\n//         <button onClick={incrementHandler}>Increment</button>\n//         <button onClick={increaseHandler}>Increase by 5</button>\n//         <button onClick={decrementHandler}>Decrement</button>\n//       </div>\n//       <button onClick={toggleCounterHandler}>Toggle Counter</button>\n//     </main>\n//   );\n// };\n\n// CLASS COMPONENT\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  incrementHandler() {\n    this.props.increment();\n  }\n  increaseHandler() {\n    this.props.increase();\n  }\n  decrementHandler() {\n    this.props.decrement();\n  }\n  toggleCounterHandler() {\n    this.props.toggleCounter();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.counter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redux Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), this.props.showCounter && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value,\n        children: this.props.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.incrementHandler.bind(this),\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.increaseHandler.bind(this),\n          children: \"Increase by 5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.decrementHandler.bind(this),\n          children: \"Decrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleCounterHandler.bind(this),\n        children: \"Toggle Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter,\n    showCounter: state.showCounter\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch(counterActions.increment()),\n    decrement: () => dispatch(counterActions.decrement()),\n    increase: () => dispatch(counterActions.increase(5)),\n    // ----- any kind of value can be passed \n    toggleCounter: () => dispatch(counterActions.toogleCounter())\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"names":["Component","classes","useSelector","useDispatch","connect","counterActions","jsxDEV","_jsxDEV","Counter","incrementHandler","props","increment","increaseHandler","increase","decrementHandler","decrement","toggleCounterHandler","toggleCounter","render","className","counter","children","fileName","_jsxFileName","lineNumber","columnNumber","showCounter","value","onClick","bind","mapStateToProps","state","mapDispatchToProps","dispatch","toogleCounter"],"sources":["D:/Desktop(9-4-2024)/React Tutorials/ReduxBasics/Project/src/components/Counter.js"],"sourcesContent":["import { Component } from 'react';\nimport classes from './Counter.module.css';\nimport {useSelector, useDispatch, connect}  from 'react-redux';\nimport { counterActions } from '../store/index';\n\n// FUNCTIONAL COMPONENT\n\n// const Counter = () => {\n//   const dispatch = useDispatch();\n//   // whren using useSelector react-redux automatically creates a subscription of this component \n//   // function to the store\n//   const counter = useSelector(state => state.counter);\n//   const toggleCounterHandler = () => {\n//      dispatch({type: 'toogleCounter'})\n//  };\n\n//   const incrementHandler = () => {\n//     dispatch({type: 'increment'});\n//   }\n\n//   const decrementHandler = () => {\n//     dispatch({type: 'decrement'})\n//   }\n\n// const increaseHandler = () => {\n//   dispatch({type: 'increase', amount: 5})\n// }\n\n//   return (\n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}>{counter}</div>\n//       <div>\n//         <button onClick={incrementHandler}>Increment</button>\n//         <button onClick={increaseHandler}>Increase by 5</button>\n//         <button onClick={decrementHandler}>Decrement</button>\n//       </div>\n//       <button onClick={toggleCounterHandler}>Toggle Counter</button>\n//     </main>\n//   );\n// };\n\n// CLASS COMPONENT\n\nclass Counter extends Component {\n  incrementHandler() {\n    this.props.increment();\n  }  \n  \n  increaseHandler() {\n    this.props.increase();\n  }\n\n  decrementHandler() {\n    this.props.decrement();\n  }\n\n  toggleCounterHandler() {\n    this.props.toggleCounter();\n  }\n\n  render() {\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        {\n          this.props.showCounter && <div className={classes.value}>{this.props.counter}</div>\n        }\n        \n        <div>\n          <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n          <button onClick={this.increaseHandler.bind(this)}>Increase by 5</button>\n          <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n          \n        </div>\n        <button onClick={this.toggleCounterHandler.bind(this)}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter,\n    showCounter: state.showCounter\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch(counterActions.increment()),\n    decrement: () => dispatch(counterActions.decrement()),\n    increase: () => dispatch(counterActions.increase(5)), // ----- any kind of value can be passed \n    toggleCounter: () => dispatch(counterActions.toogleCounter())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}