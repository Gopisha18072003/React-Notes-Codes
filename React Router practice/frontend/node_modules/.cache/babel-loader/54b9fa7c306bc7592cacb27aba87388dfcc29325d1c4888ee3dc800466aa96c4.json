{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop(9-4-2024)\\\\React Tutorials\\\\React Router practice\\\\frontend\\\\src\\\\page\\\\Eventspage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  // I can use useLoader inside any componet which are below EventsList in dom\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events.events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/eventss\");\n  if (!response.ok) {\n    return new Error('An Error occured!');\n  } else {\n    // const resData = await response.json();  returns a response object\n    // return resData.events;\n    // anything returend in this function will be available in the component\n    return response;\n    // useLoaderData extracts data from the response object\n  }\n}\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","Error","$RefreshReg$"],"sources":["D:/Desktop(9-4-2024)/React Tutorials/React Router practice/frontend/src/page/Eventspage.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  const events = useLoaderData();\r\n  // I can use useLoader inside any componet which are below EventsList in dom\r\n  return <EventsList events={events.events} />;\r\n}\r\n\r\nexport async function loader() {\r\n    const response = await fetch(\"http://localhost:8080/eventss\");\r\n\r\n    if (!response.ok) {\r\n      return new Error('An Error occured!');\r\n    } else {\r\n      // const resData = await response.json();  returns a response object\r\n      // return resData.events;\r\n      // anything returend in this function will be available in the component\r\n      return response;\r\n      // useLoaderData extracts data from the response object\r\n    }\r\n  }\r\nexport default EventsPage;\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGN,aAAa,CAAC,CAAC;EAC9B;EACA,oBAAOG,OAAA,CAACF,UAAU;IAACK,MAAM,EAAEA,MAAM,CAACA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9C;AAACL,EAAA,CAJQD,UAAU;EAAA,QACFJ,aAAa;AAAA;AAAAW,EAAA,GADrBP,UAAU;AAMnB,OAAO,eAAeQ,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAE7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAO,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EACvC,CAAC,MAAM;IACL;IACA;IACA;IACA,OAAOH,QAAQ;IACf;EACF;AACF;AACF,eAAeT,UAAU;AAAC,IAAAO,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}