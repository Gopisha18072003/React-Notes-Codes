{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop(9-4-2024)\\\\React Tutorials\\\\React Router practice\\\\frontend\\\\src\\\\page\\\\EventDetailsPage.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventDetails() {\n  _s();\n  const data = useRouteLoaderData('event-details');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_s(EventDetails, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetails;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetails\");","map":{"version":3,"names":["useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetails","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","json","message","status","$RefreshReg$"],"sources":["D:/Desktop(9-4-2024)/React Tutorials/React Router practice/frontend/src/page/EventDetailsPage.js"],"sourcesContent":["import { useRouteLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nexport default function EventDetails() {\r\n    const data = useRouteLoaderData('event-details');\r\n    return (\r\n        <EventItem event={data.event} />\r\n    );\r\n}\r\n\r\nexport async function loader({request, params}) {\r\n    const id = params.eventId\r\n    const response = await fetch('http://localhost:8080/events/' + id);\r\n    if(!response.ok) {\r\n        throw json({message: 'Could not fetch details for selected event.'}, {\r\n            status: 500\r\n        } )\r\n    } else {\r\n        return response;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,kBAAkB,QAAQ,kBAAkB;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,eAAe,CAAC;EAChD,oBACIG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAExC;AAACN,EAAA,CALuBD,YAAY;EAAA,QACnBJ,kBAAkB;AAAA;AAAAY,EAAA,GADXR,YAAY;AAOpC,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC5C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAE;IACb,MAAMC,IAAI,CAAC;MAACC,OAAO,EAAE;IAA6C,CAAC,EAAE;MACjEC,MAAM,EAAE;IACZ,CAAE,CAAC;EACP,CAAC,MAAM;IACH,OAAOL,QAAQ;EACnB;AACJ;AAAC,IAAAN,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}