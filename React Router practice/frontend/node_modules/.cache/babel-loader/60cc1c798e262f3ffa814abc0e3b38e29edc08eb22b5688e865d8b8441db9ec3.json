{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop(9-4-2024)\\\\React Tutorials\\\\React Router practice\\\\frontend\\\\src\\\\page\\\\Eventspage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  // I can use useLoader inside any componet which are below EventsList in dom\n  {}\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"Unable to fetch data\" }), {\n    //   status: 500,\n    // });\n    return json({\n      message: \"Unable to fetch data\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json(); // returns a response object\n    return resData.events;\n    // anything returend in this function will be available in the component\n    // return response;\n    // useLoaderData extracts data from the response object\n  }\n}\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","status","resData","$RefreshReg$"],"sources":["D:/Desktop(9-4-2024)/React Tutorials/React Router practice/frontend/src/page/Eventspage.js"],"sourcesContent":["import { useLoaderData, json } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  const  data= useLoaderData();\r\n  // I can use useLoader inside any componet which are below EventsList in dom\r\n  {\r\n  }\r\n  return <EventsList events={data} />;\r\n}\r\n\r\nexport async function loader() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n  \r\n  if (!response.ok) {\r\n    // throw new Response(JSON.stringify({ message: \"Unable to fetch data\" }), {\r\n    //   status: 500,\r\n    // });\r\n    return json({ message: \"Unable to fetch data\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n\r\n    const resData = await response.json();  // returns a response object\r\n    return resData.events;\r\n    // anything returend in this function will be available in the component\r\n    // return response;\r\n    // useLoaderData extracts data from the response object\r\n  }\r\n}\r\nexport default EventsPage;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AACtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAOC,IAAI,GAAEP,aAAa,CAAC,CAAC;EAC5B;EACA,CACA;EACA,oBAAOI,OAAA,CAACF,UAAU;IAACM,MAAM,EAAED;EAAK;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC;AAACN,EAAA,CANQD,UAAU;EAAA,QACJL,aAAa;AAAA;AAAAa,EAAA,GADnBR,UAAU;AAQnB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA,OAAOhB,IAAI,CAAC;MAAEiB,OAAO,EAAE;IAAuB,CAAC,EAC7C;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IAEL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACd,IAAI,CAAC,CAAC,CAAC,CAAE;IACxC,OAAOmB,OAAO,CAACZ,MAAM;IACrB;IACA;IACA;EACF;AACF;AACA,eAAeH,UAAU;AAAC,IAAAQ,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}