{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GOPI KUMAR SHAW\\\\OneDrive\\\\Desktop\\\\React Projects\\\\ClassComponent\\\\01-starting-project\\\\src\\\\components\\\\Users.js\";\nimport { useState, Component } from 'react';\nimport User from './User';\nimport classes from './Users.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Users extends Component {\n  constructor() {\n    // state is always an object\n    super();\n    this.toggleUsersHandler = () => {\n      // react doesnot overwrittes the state it merges the old state with new state\n      this.setState(curState => {\n        return {\n          showUsers: !curState.showUsers\n        };\n      });\n    };\n    this.state = {\n      showUsers: true\n    };\n  }\n  render() {\n    const usersList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.props.users.map(user => /*#__PURE__*/_jsxDEV(User, {\n        name: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleUsersHandler.bind(this),\n        children: [this.state.showUsers ? 'Hide' : 'Show', \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), this.state.showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? 'Hide' : 'Show'} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;","map":{"version":3,"names":["useState","Component","User","classes","jsxDEV","_jsxDEV","Users","constructor","toggleUsersHandler","setState","curState","showUsers","state","render","usersList","children","props","users","map","user","name","id","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","bind"],"sources":["C:/Users/GOPI KUMAR SHAW/OneDrive/Desktop/React Projects/ClassComponent/01-starting-project/src/components/Users.js"],"sourcesContent":["import { useState, Component } from 'react';\nimport User from './User';\n\nimport classes from './Users.module.css';\n\n\nclass Users extends Component {\n  constructor() {\n    // state is always an object\n    super();\n    this.state = {\n      showUsers: true,\n    }\n  }\n\n  toggleUsersHandler = () => {\n    // react doesnot overwrittes the state it merges the old state with new state\n    this.setState((curState) => { return { showUsers: !curState.showUsers } });\n\n  };\n\n  render() {\n    const usersList = (\n      <ul>\n        {this.props.users.map((user) => (\n          <User key={user.id} name={user.name} />\n        ))}\n      </ul>\n    );\n\n\n    return (\n      <div className={classes.users}>\n        <button onClick={this.toggleUsersHandler.bind(this)}>\n          {this.state.showUsers ? 'Hide' : 'Show'} Users\n        </button>\n        {this.state.showUsers && usersList}\n      </div>\n    );\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n  \n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? 'Hide' : 'Show'} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AAEzB,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,MAAMC,KAAK,SAASL,SAAS,CAAC;EAC5BM,WAAWA,CAAA,EAAG;IACZ;IACA,KAAK,CAAC,CAAC;IAAC,KAMVC,kBAAkB,GAAG,MAAM;MACzB;MACA,IAAI,CAACC,QAAQ,CAAEC,QAAQ,IAAK;QAAE,OAAO;UAAEC,SAAS,EAAE,CAACD,QAAQ,CAACC;QAAU,CAAC;MAAC,CAAC,CAAC;IAE5E,CAAC;IATC,IAAI,CAACC,KAAK,GAAG;MACXD,SAAS,EAAE;IACb,CAAC;EACH;EAQAE,MAAMA,CAAA,EAAG;IACP,MAAMC,SAAS,gBACbT,OAAA;MAAAU,QAAA,EACG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACzBd,OAAA,CAACH,IAAI;QAAekB,IAAI,EAAED,IAAI,CAACC;MAAK,GAAzBD,IAAI,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;IAGD,oBACEpB,OAAA;MAAKqB,SAAS,EAAEvB,OAAO,CAACc,KAAM;MAAAF,QAAA,gBAC5BV,OAAA;QAAQsB,OAAO,EAAE,IAAI,CAACnB,kBAAkB,CAACoB,IAAI,CAAC,IAAI,CAAE;QAAAb,QAAA,GACjD,IAAI,CAACH,KAAK,CAACD,SAAS,GAAG,MAAM,GAAG,MAAM,EAAC,QAC1C;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,IAAI,CAACb,KAAK,CAACD,SAAS,IAAIG,SAAS;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAEV;AACF;;AAEA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAenB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}